buildscript {
    ext.web3jVersion = '4.5.5'
    ext.junitVersion = '5.4.2'
    ext.log4jVersion = '2.12.1'
    ext.guavaVersion = '28.1-jre'
    ext.jacksonVersion = '2.10.0'

    repositories { mavenCentral() }
}

plugins {
    id "java"
    id "application"

    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "com.diffplug.gradle.spotless" version "3.25.0"

    id "com.github.breadmoirai.github-release" version "2.2.9"
    id "com.gradle.plugin-publish" version "0.10.0"
    id 'com.jfrog.bintray' version '1.8.4'

    // Required for JFrog Artifactory repository
    id 'jacoco'
    id 'maven-publish'

    // Required for Maven Nexus repository
    id 'maven'
    id 'signing'
    id 'idea'
}

dependencies { implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8" }

compileKotlin { kotlinOptions.jvmTarget = "11" }
compileTestKotlin { kotlinOptions.jvmTarget = "11" }

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        compile fileTree(dir: 'libs', include: ['*.jar'])
        compile "org.web3j:core:$web3jVersion"
        compile "org.apache.logging.log4j:log4j-api:$log4jVersion"
        compile "org.apache.logging.log4j:log4j-core:$log4jVersion"
        compile "com.google.guava:guava:$guavaVersion"
        compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
        compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"

        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

        testCompile "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
        testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
        testCompile "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    }

    test {
        useJUnitPlatform()
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "11"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "11"
    }

    apply plugin: 'com.diffplug.gradle.spotless'

    // see https://github.com/diffplug/spotless/tree/master/plugin-gradle
    spotless {
        kotlin {
            // This path needs to be relative to each project
            target fileTree('.') {
                include '**/*.kt'
                exclude '**/.gradle/**'
            }
            // see https://github.com/shyiko/ktlint#standard-rules
            ktlint().userData(['max_line_length': '150', 'insert_final_newline': 'true'])
            licenseHeaderFile "${rootDir}/gradle/spotless.kotlin.license"  // License header file
        }

        groovyGradle {
            target '*.gradle'
            greclipse().configFile(rootProject.file('gradle/formatter.properties'))
            endWithNewline()
            paddedCell() // recommended hack to keep gradle files tidy
        }
    }
}

jar {
    from {
        configurations.compile.grep {
            def isBesuLib = it.getParentFile().getName().equals("libs") && (it.getName().startsWith("besu-") || it.getName().startsWith("plugin-"))

            return isBesuLib
        }
        .collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

application {
    mainClassName = 'org.web3j.evm.Demo'
}

run {
    standardInput = System.in
}
