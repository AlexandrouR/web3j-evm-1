plugins {
    id 'java'
    id 'idea'
    id 'jacoco'
    id 'application'
    id "com.jfrog.bintray" version "1.8.4"
    id "com.diffplug.gradle.spotless" version "3.25.0"
    id 'io.codearte.nexus-staging' version '0.21.1'
    id "de.marcphilipp.nexus-publish" version "0.4.0"
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id "de.undercouch.download" version "4.0.0"
}

description 'Web3j-evm extension'

ext {
    web3jVersion = version
    log4jVersion = '2.12.1'
    guavaVersion = '28.1-jre'
    jacksonVersion = '2.10.0'
}

apply {
    [
        'bintray',
        'jacoco',
        'java',
        'javadoc',
        'repositories',
        'publish',
        'spotless',
        'junit'
    ].each { buildScript ->
        download {
            src "https://raw.githubusercontent.com/web3j/build-tools/master/gradle/$buildScript/build.gradle"
            dest "$rootDir/gradle/$buildScript/build.gradle"
            overwrite true
            quiet true
            onlyIfModified true
        }
        from("$rootDir/gradle/$buildScript/build.gradle")
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.web3j:core:$web3jVersion"
    compile "org.apache.logging.log4j:log4j-api:$log4jVersion"
    compile "org.apache.logging.log4j:log4j-core:$log4jVersion"
    compile "com.google.guava:guava:$guavaVersion"
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jar {
    from {
        configurations.compile.grep {
            def isBesuLib = it.getParentFile().getName().equals("libs") && (it.getName().startsWith("besu-") || it.getName().startsWith("plugin-"))

            return isBesuLib
        }
        .collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

application {
    mainClassName = 'org.web3j.evm.Demo'
}

run {
    standardInput = System.in
}
